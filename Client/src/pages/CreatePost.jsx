import React, {useState} from 'react'
import { useNavigate } from 'react-router-dom'
import {getRandomPrompt} from '../utils/index'
import { preview } from '../assets'
import { Loader, Card, FormField  } from '../components'

const CreatePost = () => {
  const navigate  = useNavigate()
const [form, setForm] = useState({
  fname: '',
  prompt: '',
  pic: '',
});
  const [generatingImg, setGeneratingImg] = useState(false)
  const [loading, setLoading] = useState(false)
  const handleSubmitForm = ()=>{

  }

  const handleChange = (e)=>{
    setForm({ ...form, [e.target.name]: e.target.value})

  }
  const handleSurpriseMe = ()=>{
    // form.prompt.charAt(0).toUpperCase()
    // alert("HandleSurprixe")
    const randomPrompt = getRandomPrompt(form.prompt)
    let updatedVal = randomPrompt.charAt(0).toUpperCase()+ randomPrompt.slice(1);
    setForm({ ...form, prompt:updatedVal})
  }
  const imgGeneratorHandler = async()=>{
    if(form.prompt){
      try {
        setGeneratingImg(true)
        const reponse = await fetch("http://lo calhost:5000/api/v1/dalle", {
          method: "POST",
          headers:{
            "Content-Type": "application/json"
          },
          body:JSON.stringify({prompt: form.prompt})
        })
        const data = await reponse.json()
        setForm({...form, pic: `data:image/jpeg;base_64,${data.pic}`})
      } catch (error) {
        alert(error)
      }
      finally{
        setGeneratingImg(false)
      }
    }
    else{
      alert("Pls Enter prompt")
    }

  }
  

  return (
    <>
      <section className='max-w-7xl mx-auto text-start' >
      <div>
        <h1 className='font-extrabold text-[#2223328] text-5xl'>Create</h1>
        <p className='mt-2 text-[#666e75] text-base max-w-[500px]'>Create collection of imaginative and visually stunning images generated by DALL-E-Ai and share them with the community</p>
      </div>

      <form className="mt-16 max-w-3xl" onSubmit={handleSubmitForm}>
        <div className="flex flex-col gap-5 ">
          <FormField
          labelName = "Your name"
          type = "text"
          name = "fname"
          placeholder = "Muhammad Umer"
          value = {form.fname}
          handleChange = {handleChange}
          />

          <FormField
          labelName = "Prompt"
          type = "text"
          name = "prompt"
          placeholder = "Muhammad Umer"
          value = {form.prompt}
          handleChange = {handleChange}
          isSurpriseMe
          handleSurpriseMe={handleSurpriseMe}
          />

          <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
            {form.pic ? (
              <img src={form.pic}  alt={form.prompt} className="w-full h-full object-contain " />
            ):(
              <img src={preview} alt="preview" className='w-9/12 h-9/12 object-contain opacity-50 '/>
            )}

          {generatingImg && (
            <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)]">
              <Loader/>
            </div>
          )}

          </div>
        </div>

            <div className="flex gap-5 mt-5">
              <button className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-6 py-3 text-center' type='button' onClick={imgGeneratorHandler} >{generatingImg? 'Generating' : 'Generate'}</button>
            </div>

            <div className="mt-10">
              <p className='mt-2 text-[#666e75] text-sm'>Once you have created the image you want, you can share it with others in the community</p>
              <button className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-6 py-3 text-center' type='button' onClick={imgGeneratorHandler} >{loading? 'Sharing....' : 'Share with the community'}</button>

            </div>

      </form>
      </section>
    </>
  )
}

export default CreatePost
